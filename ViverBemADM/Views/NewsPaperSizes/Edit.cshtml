@model ViverBemADM.Models.NewsPaperSizes

@{
    ViewBag.Title = "Editar - Tamanho de Anúncio";
}

<h2>Editar - Tamanho dos Anúncios</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NewsPaperSizesID)

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", data_val_number = "O campo Altura deve ser numérico!" } })
                <strong>@Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })</strong>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control", data_val_number = "O campo Largura deve ser numérico!" } })
                <strong>@Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })</strong>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NormalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NormalPrice, new { htmlAttributes = new { @class = "form-control", data_val_number = "O campo Preço Normal deve ser numérico!" } })
                <strong>@Html.ValidationMessageFor(model => model.NormalPrice, "", new { @class = "text-danger" })</strong>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PromotionalPrice, new { htmlAttributes = new { @class = "form-control", data_val_number = "O campo Preço Promocional deve ser numérico!", } })
                <strong>@Html.ValidationMessageFor(model => model.PromotionalPrice, "", new { @class = "text-danger" })</strong>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SizeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SizeName, new { htmlAttributes = new { @class = "form-control", data_val_number = "O campo Nome deve ser numérico!" } })
                <strong>@Html.ValidationMessageFor(model => model.SizeName, "", new { @class = "text-danger" })</strong>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">@Html.ActionLink("Retornar a Lista", "Index", null, new { @class = "btn btn-primary" })
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
